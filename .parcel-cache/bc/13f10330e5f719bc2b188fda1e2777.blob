var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _nodeJs = require("./node.js");
var _nodeJsDefault = _parcelHelpers.interopDefault(_nodeJs);
var _edgeJs = require("./edge.js");
var _edgeJsDefault = _parcelHelpers.interopDefault(_edgeJs);
class Graph {
  constructor() {
    this.nodes = [];
    this.edges = [];
    this.neighbors = new Map();
    this.degrees = new Map();
  }
  generateSquare(n) {
    for (let i = 1; i <= n; i++) {
      for (let j = 1; j <= n; j++) {
        let node = this.addVertex();
      }
    }
  }
  nextId() {
    if (this.nodes.length == 0) return 0; else return this.nodes[this.nodes.length - 1].id + 1;
  }
  addVertex() {
    var new_node = new _nodeJsDefault.default(this.nextId());
    this.nodes.push(new_node);
    return new_node;
  }
  addEdge(u, v) {
    this.edges.push(_edgeJsDefault.default(u, v));
    if (typeof this.neighbors[u] == "undefined") {
      this.neighbors[u] = [v];
    } else this.neighbors[u].push(v);
    if (typeof this.neighbors[v] == "undefined") {
      this.neighbors[u] = [u];
    } else this.neighbors[u].push(u);
  }
}
exports.default = Graph;
