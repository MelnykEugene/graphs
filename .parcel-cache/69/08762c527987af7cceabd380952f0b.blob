{"mappings":"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","sources":["./src/js/node.js","./src/js/edge.js","./src/js/graph.js","./src/js/codeFromGraph.js","./src/js/index.js"],"sourcesContent":["export default class Node {\n  constructor(id) {\n    this.id = id;\n    this.neighbors = [];\n    this.degree = 0;\n    this.x = 0;\n    this.y = 0;\n    this.nextX = this.x;\n    this.nextY = this.y;\n  }\n\n  secondaryConstructor(neighbor) {\n    this.neighbors.push(neighbor);\n    this.degree = 1;\n    neighbor.neighbors.push(this);\n    neighbor.degree += 1;\n    this.x = Math.random() - 0.5;\n    this.y = Math.random() - 0.5;\n    this.nextX = this.x;\n    this.nextY = this.y;\n  }\n}\n","import Node from \"./node.js\";\n\nexport default class Edge {\n  constructor(node1, node2) {\n    if (node1.id >= node2.id) {\n      throw \"invalid edge \" + node1.id + \" \" + node2.id;\n    }\n\n    this.node1 = node1;\n    this.node2 = node2;\n  }\n}\n","import Node from \"./node.js\";\nimport Edge from \"./edge.js\";\n\nexport default class Graph {\n  constructor() {\n    this.nodes = [];\n    this.edges = [];\n    this.encoding = [];\n  }\n\n  nextId() {\n    return (\n      Math.max.apply(\n        Math,\n        this.nodes.map((x) => x.id)\n      ) + 1\n    );\n  }\n\n  addVertex() {\n    var indexOfNeighbor = Math.floor(Math.random() * this.nodes.length);\n    var newnode;\n    if (this.nodes.length == 0) {\n      newnode = new Node(0);\n    } else {\n      newnode = new Node(this.nextId());\n      newnode.secondaryConstructor(this.nodes[indexOfNeighbor]);\n      this.encoding.push(indexOfNeighbor);\n      console.log(\"pushed \" + indexOfNeighbor);\n    }\n\n    this.nodes.push(newnode);\n\n    if (this.nodes.length != 1) {\n      this.edges.push(\n        new Edge(this.nodes[indexOfNeighbor], this.nodes[newnode.id])\n      );\n    }\n  }\n\n  addVertexId(id) {\n    var newnode;\n\n    newnode = new Node(this.nextId());\n    newnode.secondaryConstructor(this.nodes[id]);\n    this.nodes.push(newnode);\n\n    if (this.nodes.length != 1) {\n      this.edges.push(new Edge(this.nodes[id], this.nodes[newnode.id]));\n    }\n  }\n\n  removeVertex() {\n    let indexToRemove = this.nextId() - 1;\n    this.encoding.pop();\n\n    for (var i = 0; i < this.nodes[indexToRemove].neighbors.length; i++) {\n      var neighbor = this.nodes[indexToRemove].neighbors[i];\n      neighbor.degree -= 1;\n      let index = neighbor.neighbors.indexOf(this.nodes[indexToRemove]);\n      neighbor.neighbors.splice(index, 1);\n    }\n\n    for (var i = 0; i < this.edges.length; i++) {\n      var edge = this.edges[i];\n      if (edge.node1.id == indexToRemove || edge.node2.id == indexToRemove) {\n        this.edges.splice(i, 1);\n        console.log(\"removed edge\");\n      }\n    }\n\n    this.nodes.splice(indexToRemove, 1);\n  }\n}\n","import Graph from \"./graph.js\";\n\nexport function graphFromEncoding(encoding) {\n  var copyGraph = new Graph();\n  copyGraph.addVertex();\n  for (var i = 0; i < encoding.length; i++) {\n    copyGraph.addVertexId(encoding[i]);\n  }\n  if (copyGraph.nodes.length - 1 != copyGraph.edges.length) {\n    throw \"incorrect construction from copy\";\n  }\n  return copyGraph;\n}\n\nexport function codeFromGraph(graph) {\n  var graphCopy = graphFromEncoding(graph.encoding);\n  var result = \"\";\n\n  while (graphCopy.nodes.length > 2) {\n    let u = smallestLeaf(graphCopy);\n    console.log(\"smallest leaf id= \" + u.id);\n    let i = smallestNeighbor(graphCopy, u);\n    console.log(\"smallestNeighbor id= \" + i.id);\n    console.log(\"\");\n    result = result + \" \" + i.id;\n    reduce(graphCopy, u);\n  }\n  console.log(result);\n  return result;\n}\n\nexport function smallestLeaf(graphCopy) {\n  console.log(\n    \"trying to find smallest leaf with \" + graphCopy.nodes.length + \" nodes\"\n  );\n\n  for (var j = 0; j < graphCopy.nodes.length; j++) {\n    let noder = graphCopy.nodes[j];\n\n    if (noder.degree == 1) return noder;\n  }\n  throw \"couldn't find a leaf in smallestLeaf subroutine\";\n}\n\nexport function smallestNeighbor(graphCopy, vertex) {\n  var id = Math.min.apply(\n    Math,\n    vertex.neighbors.map((x) => x.id)\n  );\n\n  for (var i = 0; i < vertex.neighbors.length; i++) {\n    if (vertex.neighbors[i].id == id) return vertex.neighbors[i];\n  }\n\n  throw \"coudln't find a smallest neighbor in smallestNeighbor subroutine\";\n}\n\nexport function reduce(graphCopy, vertex) {\n  let indexToRemove = vertex.id;\n\n  console.log(\"remove vertex id \" + vertex.id);\n\n  for (var i = 0; i < vertex.neighbors.length; i++) {\n    let neighbor = vertex.neighbors[i];\n    neighbor.degree = neighbor.degree - 1;\n    let index = neighbor.neighbors.indexOf(vertex);\n    neighbor.neighbors.splice(index, 1);\n  }\n\n  for (var i = 0; i < graphCopy.edges.length; i++) {\n    var edge = graphCopy.edges[i];\n    if (edge.node1.id == indexToRemove || edge.node2.id == indexToRemove) {\n      graphCopy.edges.splice(i, 1);\n      console.log(\"removed edge\");\n    }\n  }\n\n  let indexinArrayToRemove = -1;\n  for (var i = 0; i < graphCopy.nodes.length; i++) {\n    if (graphCopy.nodes[i].id == vertex.id) {\n      indexinArrayToRemove = i;\n    }\n  }\n\n  if (indexinArrayToRemove == -1) {\n    throw \"coudln't find edge-to-remove in array with id = \" + vertex.id;\n  }\n  graphCopy.nodes.splice(indexinArrayToRemove, 1);\n}\n","import Graph from \"./graph.js\";\n\nvar canv = document.getElementById(\"myCanvas\");\nvar context = canv.getContext(\"2d\");\nvar rect = canv.getBoundingClientRect();\n\nvar graph = new Graph();\n\nimport {\n  codeFromGraph,\n  smallestLeaf,\n  smallestNeighbor,\n  reduce,\n  graphFromEncoding,\n} from \"./codeFromGraph.js\";\n\nlet code = document.getElementById(\"code\");\n\nvar buttonVertex = document.getElementById(\"addVertex\");\nbuttonVertex.onclick = function () {\n  graph.addVertex();\n  updateCode();\n};\n\nvar buttonVertexRemove = document.getElementById(\"removeVertex\");\nbuttonVertexRemove.onclick = function () {\n  graph.removeVertex();\n  updateCode();\n};\n\nvar generateMany = document.getElementById(\"generateMany\");\ngenerateMany.oninput = function () {\n  graph.nodes = [];\n  graph.edges = [];\n  graph.encoding = [];\n\n  let number = generateMany.value;\n  for (var i = 0; i < number; i++) {\n    graph.addVertex();\n  }\n  updateCode();\n};\n\nfor (var i = 0; i < 10; i++) {\n  graph.addVertex();\n}\n\nvar updateCode = () => {\n  code.innerHTML = \"<strong>Pruffer Code: </strong>\" + codeFromGraph(graph);\n};\n\nvar drawNodes = function (graph, context) {\n  graph.nodes.forEach(function (node) {\n    context.beginPath();\n    context.fillStyle = \"black\";\n    context.arc(node.x, node.y, 5, 0, 2 * Math.PI);\n    context.fill();\n    context.closePath();\n    context.font = \"14px Arial\";\n    context.fillText(node.id, node.x + 5, node.y - 5);\n    context.fillStyle = \"red\";\n    context.font = \"20px Arial\";\n    context.fillText(node.degree, node.x - 20, node.y + 20);\n  });\n};\n\nvar drawEdges = function (graph, context) {\n  graph.edges.forEach(function (edge) {\n    context.beginPath();\n    context.strokeStyle = \"black\";\n    context.moveTo(edge.node1.x, edge.node1.y);\n    context.lineTo(edge.node2.x, edge.node2.y);\n    context.stroke();\n  });\n};\n\nvar update = () => {\n  graph.edges.forEach(function (edge) {\n    if (edge.node1 == undefined || edge.node2 == undefined) {\n      console.log(\"undefined edge\");\n      return;\n    }\n\n    if (edge.node1.x == edge.node2.x && edge.node1.y == edge.node2.y) {\n      console.log(\"invalid edge encountered\");\n      return;\n    }\n\n    let radiusx = edge.node2.x - edge.node1.x;\n    let radiusy = edge.node2.y - edge.node1.y;\n\n    let distance = Math.sqrt(radiusx * radiusx + radiusy * radiusy);\n\n    if (distance == 0) {\n      console.log(\"zero distance encountered\");\n    }\n\n    let unitradiusx = radiusx / distance;\n    let unitradiusy = radiusy / distance;\n\n    let minusradiusx = -1 * unitradiusx;\n    let minusradiusy = -1 * unitradiusy;\n\n    var c1 = 0.2;\n    var c2 = 40;\n\n    edge.node1.nextX +=\n      (unitradiusx * (c1 * Math.log(distance / c2) + 4 * distance) * 1) / 60;\n    edge.node1.nextY +=\n      (unitradiusy * (c1 * Math.log(distance / c2) + 4 * distance) * 1) / 60;\n\n    edge.node2.nextX +=\n      (minusradiusx * (c1 * Math.log(distance / c2) + 4 * distance) * 1) / 60;\n    edge.node2.nextY +=\n      (minusradiusy * (c1 * Math.log(distance / c2) + 4 * distance) * 1) / 60;\n  });\n\n  for (var i = 0; i < graph.nodes.length; i++) {\n    for (var j = 0; j < graph.nodes.length; j++) {\n      if (i == j) continue;\n\n      let node = graph.nodes[i];\n      let node2 = graph.nodes[j];\n\n      if (node == undefined || node2 == undefined) {\n        console.log(\"undefined edge\");\n        return;\n      }\n\n      let radiusx = node.x - node2.x;\n      let radiusy = node.y - node2.y;\n\n      let distance = Math.sqrt(radiusx * radiusx + radiusy * radiusy);\n\n      let unitradiusx = radiusx / distance;\n      let unitradiusy = radiusy / distance;\n\n      let magnitude = 1000 / distance;\n\n      node.nextX += (unitradiusx * magnitude * 1) / 60;\n      node.nextY += (unitradiusy * magnitude * 1) / 60;\n    }\n  }\n\n  for (var i = 0; i < graph.nodes.length; i++) {\n    graph.nodes[i].x = graph.nodes[i].nextX;\n    graph.nodes[i].y = graph.nodes[i].nextY;\n  }\n};\n\nvar draw = () => {\n  context.save();\n  context.setTransform(1, 0, 0, 1, 0, 0);\n  // var p1 = context.transformedPoint(0, 0);\n  // var p2 = context.transformedPoint(canv.width * 2, canv.height * 2);\n  context.clearRect(0, 0, canv.width, canv.height);\n  context.restore();\n\n  drawNodes(graph, context);\n  drawEdges(graph, context);\n\n  if (graph.edges.length != graph.nodes.length - 1) {\n    console.log(\"invalid graph construction \" + graph.edges.length);\n  }\n};\n\nvar lastX = canv.width / 2,\n  lastY = canv.height / 2;\nvar dragStart, dragged;\n\nvar lastX = canv.width / 2,\n  lastY = canv.height / 2;\nvar dragStart, dragged;\ncanv.addEventListener(\n  \"mousedown\",\n  function (evt) {\n    document.body.style.mozUserSelect = document.body.style.webkitUserSelect = document.body.style.userSelect =\n      \"none\";\n    lastX = evt.offsetX || evt.pageX - canv.offsetLeft;\n    lastY = evt.offsetY || evt.pageY - canv.offsetTop;\n    dragStart = context.transformedPoint(lastX, lastY);\n    dragged = false;\n  },\n  false\n);\ncanv.addEventListener(\n  \"mousemove\",\n  function (evt) {\n    lastX = evt.offsetX || evt.pageX - canv.offsetLeft;\n    lastY = evt.offsetY || evt.pageY - canv.offsetTop;\n    dragged = true;\n    if (dragStart) {\n      var pt = context.transformedPoint(lastX, lastY);\n      context.translate(pt.x - dragStart.x, pt.y - dragStart.y);\n      draw();\n    }\n  },\n  false\n);\ncanv.addEventListener(\n  \"mouseup\",\n  function (evt) {\n    dragStart = null;\n    //if (!dragged) zoom(evt.shiftKey ? -1 : 1);\n  },\n  false\n);\n\ncanv.addEventListener(\"dblclick\", () => {\n  context.setTransform(1, 0, 0, 1, 0, 0);\n  var translateX = canv.width / 2;\n  var translateY = canv.height / 2;\n  context.translate(translateX, translateY);\n});\n\nvar scaleFactor = 1.1;\nvar zoom = function (clicks) {\n  var pt = context.transformedPoint(lastX, lastY);\n  context.translate(pt.x, pt.y);\n  var factor = Math.pow(scaleFactor, clicks);\n  context.scale(factor, factor);\n  context.translate(-pt.x, -pt.y);\n  draw();\n};\n\nvar handleScroll = function (evt) {\n  var delta = evt.wheelDelta\n    ? evt.wheelDelta / 40\n    : evt.detail\n    ? -evt.detail\n    : 0;\n  if (delta) {\n    zoom(delta);\n  }\n  return evt.preventDefault() && false;\n};\ncanv.addEventListener(\"DOMMouseScroll\", handleScroll, false);\ncanv.addEventListener(\"mousewheel\", handleScroll, false);\n\nvar updateNDraw = function () {\n  update();\n  draw();\n  requestAnimationFrame(updateNDraw);\n};\n\nfunction trackTransforms(ctx) {\n  var svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n  var xform = svg.createSVGMatrix();\n  ctx.getTransform = function () {\n    return xform;\n  };\n\n  var savedTransforms = [];\n  var save = ctx.save;\n  ctx.save = function () {\n    savedTransforms.push(xform.translate(0, 0));\n    return save.call(ctx);\n  };\n  var restore = ctx.restore;\n  ctx.restore = function () {\n    xform = savedTransforms.pop();\n    return restore.call(ctx);\n  };\n\n  var scale = ctx.scale;\n  ctx.scale = function (sx, sy) {\n    xform = xform.scaleNonUniform(sx, sy);\n    return scale.call(ctx, sx, sy);\n  };\n  var rotate = ctx.rotate;\n  ctx.rotate = function (radians) {\n    xform = xform.rotate((radians * 180) / Math.PI);\n    return rotate.call(ctx, radians);\n  };\n  var translate = ctx.translate;\n  ctx.translate = function (dx, dy) {\n    xform = xform.translate(dx, dy);\n    return translate.call(ctx, dx, dy);\n  };\n  var transform = ctx.transform;\n  ctx.transform = function (a, b, c, d, e, f) {\n    var m2 = svg.createSVGMatrix();\n    m2.a = a;\n    m2.b = b;\n    m2.c = c;\n    m2.d = d;\n    m2.e = e;\n    m2.f = f;\n    xform = xform.multiply(m2);\n    return transform.call(ctx, a, b, c, d, e, f);\n  };\n  var setTransform = ctx.setTransform;\n  ctx.setTransform = function (a, b, c, d, e, f) {\n    xform.a = a;\n    xform.b = b;\n    xform.c = c;\n    xform.d = d;\n    xform.e = e;\n    xform.f = f;\n    return setTransform.call(ctx, a, b, c, d, e, f);\n  };\n  var pt = svg.createSVGPoint();\n  ctx.transformedPoint = function (x, y) {\n    pt.x = x;\n    pt.y = y;\n    return pt.matrixTransform(xform.inverse());\n  };\n}\n\ntrackTransforms(context);\nvar translateX = canv.width / 2;\nvar translateY = canv.height / 2;\ncontext.translate(translateX, translateY);\n\nupdateCode();\n\nupdateNDraw();\n"],"names":["$98b34357220f768aa35ada225e06a534$export$default","constructor","id","this","neighbors","degree","x","y","nextX","nextY","secondaryConstructor","neighbor","push","Math","random","$bb0b53a83eb52def3c3ae7b974a22fde$export$default","node1","node2","$c7a0e68d0886866fa3037b5918882076$export$default","nodes","edges","encoding","nextId","max","apply","map","addVertex","newnode","indexOfNeighbor","floor","length","console","log","addVertexId","removeVertex","indexToRemove","pop","i","index","indexOf","splice","edge","$2cd388ac639934de19c188d7db4a0314$export$codeFromGraph","graph","graphCopy","copyGraph","$2cd388ac639934de19c188d7db4a0314$export$graphFromEncoding","result","u","$2cd388ac639934de19c188d7db4a0314$export$smallestLeaf","$2cd388ac639934de19c188d7db4a0314$export$smallestNeighbor","$2cd388ac639934de19c188d7db4a0314$export$reduce","j","noder","vertex","min","indexinArrayToRemove","$f6dfaefb9e5b052f09219a53921da9fa$var$canv","document","getElementById","$f6dfaefb9e5b052f09219a53921da9fa$var$context","getContext","$f6dfaefb9e5b052f09219a53921da9fa$var$graph","getBoundingClientRect","$f6dfaefb9e5b052f09219a53921da9fa$var$code","onclick","$f6dfaefb9e5b052f09219a53921da9fa$var$updateCode","$f6dfaefb9e5b052f09219a53921da9fa$var$generateMany","oninput","number","value","$f6dfaefb9e5b052f09219a53921da9fa$var$i","$f6dfaefb9e5b052f09219a53921da9fa$var$dragStart","innerHTML","$f6dfaefb9e5b052f09219a53921da9fa$var$draw","context","save","setTransform","clearRect","width","height","restore","forEach","node","beginPath","fillStyle","arc","PI","fill","closePath","font","fillText","strokeStyle","moveTo","lineTo","stroke","$f6dfaefb9e5b052f09219a53921da9fa$var$drawEdges","$f6dfaefb9e5b052f09219a53921da9fa$var$lastX","$f6dfaefb9e5b052f09219a53921da9fa$var$lastY","addEventListener","evt","body","style","mozUserSelect","webkitUserSelect","userSelect","offsetX","pageX","offsetLeft","offsetY","pageY","offsetTop","transformedPoint","pt","translate","translateX","translateY","$f6dfaefb9e5b052f09219a53921da9fa$var$handleScroll","delta","wheelDelta","detail","clicks","factor","pow","scale","$f6dfaefb9e5b052f09219a53921da9fa$var$zoom","preventDefault","$f6dfaefb9e5b052f09219a53921da9fa$var$updateNDraw","undefined","radiusx","radiusy","distance","sqrt","unitradiusx","unitradiusy","minusradiusx","minusradiusy","c1","magnitude","$f6dfaefb9e5b052f09219a53921da9fa$var$update","requestAnimationFrame","ctx","svg","createElementNS","xform","createSVGMatrix","getTransform","savedTransforms","call","sx","sy","scaleNonUniform","rotate","radians","dx","dy","transform","a","b","c","d","e","f","m2","multiply","createSVGPoint","matrixTransform","inverse","$f6dfaefb9e5b052f09219a53921da9fa$var$trackTransforms","$f6dfaefb9e5b052f09219a53921da9fa$var$translateX","$f6dfaefb9e5b052f09219a53921da9fa$var$translateY"],"version":3,"file":"index.HASH_REF_7e2d2507b48b9b2464ec4faabcf5a8b0.js.map"}